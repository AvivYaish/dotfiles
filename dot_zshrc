# Apps
# Editor: nvim
# Shell: zsh
# Shell styling: oh-my-zsh, oh-my-posh, powerlevel10k
# Terminal multiplexer: byobu
# Dotfile tracking: chezmoi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
    git
    pip
    macos
    bundler
    dotenv
    python
    npm
    zsh-autocomplete
    zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
autoload -U compinit
compinit

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

if [[ `uname` == "Darwin"  ]]; then
    # Configure homebrew
    export PATH=$HOME/homebrew/bin:$PATH

    # byobu
    export BYOBU_PREFIX=$HOME/homebrew

    # Configure npm
    export PATH=$HOME/node-v17.1.0-darwin-arm64/bin:$PATH
    npm config set prefix ~/.npm-packages

    # Hardhat doesn't like node 17
    export NODE_OPTIONS=--openssl-legacy-provider
else
    export PATH=$HOME/.pyenv/bin:$PATH

    # Configure node version manager
    export NVM_DIR="$HOME/.nvm"
    [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
    [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
fi

export PATH=$HOME/.local/bin:$PATH
# export BYOBU_CONFIG_DIR=~/.local/share/byobu

# nvim
alias nvim="nvim.appimage" # Assuming this is installed in $HOME/.local/bin
alias vim="nvim"
alias vimdiff="nvim -d"

# Correctly setting pyenv's python on HUJI's computers
eval "$(pyenv init --path)"

# Install byobu to .local:
# wget https://launchpad.net/byobu/trunk/5.133/+download/byobu_5.133.orig.tar.gz
# tar -zxvf byobu_5.133.orig.tar.gz
# rm byobu_5.133.orig.tar.gz
# cd byobu-5.133
# ./configure --prefix="$HOME/.local"
# make
# make install
# cd ..
# rm -rf byobu-5.133

# Some versions have a problem when installing from source https://bugs.launchpad.net/byobu/+bug/1025998
# Edit byobu-janitor: vim .local/bin/byobu-janitor
# Replace this:

# if ! grep -qs "^screen_upper_left=" "$BYOBU_CONFIG_DIR/status"; then
#         rm -f "$BYOBU_CONFIG_DIR/status" "$BYOBU_CONFIG_DIR/statusrc"
# fi

# with

# if [ -f "$BYOBU_CONFIG_DIR/status" ]; then
#     if ! grep -qs "^screen_upper_left=" "$BYOBU_CONFIG_DIR/status"; then
#         rm -f "$BYOBU_CONFIG_DIR/status" "$BYOBU_CONFIG_DIR/statusrc"
#     fi
# fi

# Try running: byobu-config
# If "snack" is missing, install: conda install -c conda-forge newt

# If you don't have anaconda:
# Install pyenv from source for HUJI: https://github.com/pyenv/pyenv-installer
# Then install some python interpreter: pyenv install miniconda3-latest
# Then use it: pyenv global miniconda3-latest
# Also for python2: pyenv install miniconda2-latest ; pyenv global miniconda2-latest

# Seems .local/lib/byobu/include/common uses some wrong paths
# For example, doesn't use $BYOBU_PREFIX on '/etc'

# TmuxPluginManager requires a .tmux.conf at the root, run: ln -s .local/share/byobu/.tmux.conf .
